export component Key inherits Rectangle {
    in property <bool> is_black: false;
    in property <string> note;
    in property <int> octave;

    callback key_pressed(note: string, octave: int);
    callback key_released(note: string, octave: int);

    width: root.is_black ? 44px : 70px;
    height: root.is_black ? 140px : 230px;
    background: root.is_black ? #000000 : #ffffff;
    border-color: #000000;
    border-radius: root.is_black ? 5px : 8px;
    border-width: root.is_black ? 0px : 1px;

    touch_area := TouchArea {
        width: 100%;
        height: 100%;

        pointer-event(event) => {
            if event.kind == PointerEventKind.down {
                root.key_pressed(note, octave);
            } else if event.kind == PointerEventKind.up {
                root.key_released(note, octave);
            }
        }
    }

    states [
        pressed when touch_area.pressed: {
            root.background: root.is_black ? #222222 : #dddddd;

            in {
                animate root.background { duration: 100ms; easing: ease-in; }
            }
            out {
                animate root.background { duration: 100ms; easing: ease-out; }
            }
        }
    ]
}
